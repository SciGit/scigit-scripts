#!/usr/bin/python27

import os, sys
import re
import MySQLdb

def error(msg):
	sys.stderr.write("scigit: %s\n" % msg)
	sys.exit(1)

dbc = MySQLdb.connect(user='scigit', passwd='scigit', db='scigit')

if len(sys.argv) != 3:
	error('invalid arguments')
user = sys.argv[1]
match = re.search('^u([0-9]+)$', user)
if match == None:
	error('invalid user')
userid = int(match.group(1))

if userid != 0:
	pkeyid = int(sys.argv[2])
	cursor = dbc.cursor()
	cursor.execute("""SELECT id FROM user_pub_keys
		WHERE id = %s AND user_id = %s""", (pkeyid, userid))
	if cursor.fetchone() == None:
		error('Permission denied (publickey)')

soc = os.getenv('SSH_ORIGINAL_COMMAND')
git_commands = 'git-upload-pack|git-receive-pack|git-upload-archive'
match = re.search("^(%s) '(.*?)(\.git)?'$" % git_commands, soc)
if match == None:
	error("Invalid git command")

verb = match.group(1)
repo = match.group(2)
match = re.search('^r([0-9]+)$', repo)
if match == None:
	error("Invalid repository")
repoid = match.group(1)

if userid != 0:
	cursor = dbc.cursor()
	cursor.execute("""SELECT can_write FROM proj_permissions
		WHERE proj_id = %s AND user_id = %s""", (repoid, userid))
	result = cursor.fetchone()
	write = verb.find('upload') != -1
	if result == None or (write and result[0] == 0):
		error('not authorized (or wrong repository)')

os.environ['SCIGIT_USER_ID'] = str(userid)
os.system("/usr/bin/git shell -c \"%s 'repositories/%s'\"" % (verb, repo))

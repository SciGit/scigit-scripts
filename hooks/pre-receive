#!/usr/bin/python27
# Check that the commit file sizes meet the limits.

import os, sys
import subprocess

def error(msg):
	sys.stderr.write("scigit: %s\n" % msg)
	sys.exit(1)

for line in sys.stdin.readlines():
	old, new, ref = line.split()
	if ref != 'refs/heads/master':
		error('branches are not supported')

	args = []
	if old.count('0') == len(old):
		args = ['git', 'log', '--pretty=%H', new]
	else:
		args = ['git', 'log', '--pretty=%H', old + '..' + new]
	commits = subprocess.check_output(args).split()

	for commit in commits:
		output = subprocess.check_output(['git', 'ls-tree', '-lr', commit])
		total_size = 0
		for file in output.strip().splitlines():
			_, type, _, size, _ = file.split(None, 4)
			if type == 'blob':
				total_size += int(size)

	repo_limit = int(subprocess.check_output(['git', 'config', 'scigit.repo.limit']))
	if total_size > repo_limit:
		error("commit %s is too large (%d bytes)" % (commit, total_size))

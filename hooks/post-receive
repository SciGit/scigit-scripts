#!/usr/bin/php
<?

/* Add the commit to the scigit database and update the usable repo. */

require_once '/var/scigit/include/scigit.php';

scigit_db_connect();
$repo_id = intval(exec('git config scigit.repo.id'));
$user_id = intval(substr(getenv('GL_USER'), 1));

// Get the last saved commit
$q = mysql_query('SELECT commit_hash FROM proj_changes ' .
	"WHERE proj_id = $repo_id ORDER BY id DESC LIMIT 1");
if (!$q) {
	echo 'DB error: ' . mysql_error() . "\n";
	exit(1);
}
$old = '';
if ($r = mysql_fetch_assoc($q)) {
	$old = $r['commit_hash'];
}

// Insert new commits into database
$stdin = fopen('php://stdin', 'r');
while ($line = fgets($stdin)) {
	list($_, $new, $ref) = preg_split('/\\s+/', $line);
	if ($ref != 'refs/heads/master') {
		exit(1);
	}
	$commits = array();
	if ($old == '') {
		exec("git log --pretty='%H %at %s' $new", $commits);
	} else {
		exec("git log --pretty='%H %at %s' $old..$new", $commits);
	}

	foreach (array_reverse($commits) as $commit) {
		list($hash, $date, $msg) = explode(' ', $commit, 3);
		$msg = addslashes($msg);
		$q = mysql_query('INSERT INTO proj_changes '.
			'(proj_id, user_id, commit_msg, commit_hash, commit_ts) VALUES '.
			"($repo_id, $user_id, '$msg', '$hash', $date)");
		if (!$q) {
			echo 'DB error: ' . mysql_error() . "\n";
			exit(1);
		}
	}
}

// Pull into local accessible repository
chdir(SCIGIT_REPO_DIR);
$repo_name = 'r'.$repo_id;
if (is_dir($repo_name)) {
	chdir($repo_name);
	exec('env -i git pull');
} else {
	exec("env -i git clone git@localhost:$repo_name");
	chdir($repo_name);
	exec('env -i git config core.fileMode false');
}
exec('env -i chmod 755 -R '.SCIGIT_REPO_DIR.'/'.$repo_name);
